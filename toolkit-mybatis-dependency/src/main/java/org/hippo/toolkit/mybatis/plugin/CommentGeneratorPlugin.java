package org.hippo.toolkit.mybatis.plugin;

import org.mybatis.generator.api.CommentGenerator;
import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.*;
import org.mybatis.generator.api.dom.xml.TextElement;
import org.mybatis.generator.api.dom.xml.XmlElement;
import org.mybatis.generator.config.MergeConstants;
import org.mybatis.generator.config.PropertyRegistry;
import org.mybatis.generator.internal.util.StringUtility;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

/**
 * Mybatis注释插件
 * <p>
 * Created by litengfei on 2017/6/19.
 */
public class CommentGeneratorPlugin implements CommentGenerator {

    /** The properties. */
    private Properties properties;

    /** The suppress date. */
    private boolean suppressDate;

    /** The suppress all comments. */
    private boolean suppressAllComments;

    /**
     * The addition of table remark's comments.
     * If suppressAllComments is true, this option is ignored
     */
    private boolean addRemarkComments;

    private SimpleDateFormat dateFormat;

    public CommentGeneratorPlugin() {
        super();
        properties = new Properties();
        suppressDate = false;
        suppressAllComments = false;
        addRemarkComments = false;
    }

    public void addConfigurationProperties(Properties properties) {
        this.properties.putAll(properties);
        suppressDate = StringUtility.isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));
        suppressAllComments = StringUtility.isTrue(properties.getProperty(PropertyRegistry
                .COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));
        addRemarkComments = StringUtility.isTrue(properties.getProperty(PropertyRegistry
                .COMMENT_GENERATOR_ADD_REMARK_COMMENTS));

        String dateFormatString = properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_DATE_FORMAT);
        if (StringUtility.stringHasValue(dateFormatString)) {
            dateFormat = new SimpleDateFormat(dateFormatString);
        }
    }

    public void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn
            introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        field.addJavaDocLine("/** " + introspectedColumn.getRemarks() + "(" + introspectedTable
                .getFullyQualifiedTable() + "." + introspectedColumn.getActualColumnName() + ") */");

        //        String column = introspectedColumn.getActualColumnName();
        //        if (StringUtility.stringContainsSpace(column) || introspectedTable.getTableConfiguration()
        //                .isAllColumnDelimitingEnabled()) {
        //            column = introspectedColumn.getContext().getBeginningDelimiter()
        //                    + column
        //                    + introspectedColumn.getContext().getEndingDelimiter();
        //        }
        //
        //        if (!column.equals(introspectedColumn.getJavaProperty())) {
        //            field.addAnnotation("@MyBatisColumnAnnotation(name = \"" + column + "\", "
        //                    + "value = \"" + introspectedTable.getFullyQualifiedTable() + "_" + introspectedColumn
        //                    .getActualColumnName() + "\", "
        //                    + "chineseNote = \"" + introspectedColumn.getRemarks() + "\", "
        //                    + "tableAlias = \"" + introspectedColumn.getTableAlias() + "\")");
        //        }
    }

    public void addFieldComment(Field field, IntrospectedTable introspectedTable) {
        if (suppressAllComments || !addRemarkComments) {
            return;
        }

        if (field.getName().equals("serialVersionUID")) {
            field.addJavaDocLine("");
            field.addJavaDocLine("/** serialVersionUID */");
        }

        //        field.addJavaDocLine("/**");
        //        field.addJavaDocLine(" * This field was generated by MyBatis Generator.");
        //
        //        StringBuilder sb = new StringBuilder();
        //        sb.append(" * This field corresponds to the database table ");
        //        sb.append(introspectedTable.getFullyQualifiedTable());
        //        field.addJavaDocLine(sb.toString());
        //
        //        addJavadocTag(field, false);
        //        field.addJavaDocLine(" */");
    }

    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        if (suppressAllComments || !addRemarkComments) {
            return;
        }

        topLevelClass.addJavaDocLine("/**");
        topLevelClass.addJavaDocLine(" * " + introspectedTable.getRemarks() + "(" + introspectedTable
                .getFullyQualifiedTable() + ")数据实体类");
        topLevelClass.addJavaDocLine(" * <p>");
        topLevelClass.addJavaDocLine(" * Created by MyBatis Generator on " + getDateString() + ".");
        topLevelClass.addJavaDocLine(" */");
    }

    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {
        if (suppressAllComments) {
            return;
        }

        innerClass.addJavaDocLine("/**");
        innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");

        StringBuilder sb = new StringBuilder();
        sb.append(" * This class corresponds to the database table ");
        sb.append(introspectedTable.getFullyQualifiedTable());
        innerClass.addJavaDocLine(sb.toString());

        addJavadocTag(innerClass, false);
        innerClass.addJavaDocLine(" */");
    }

    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {
        if (suppressAllComments) {
            return;
        }

        innerClass.addJavaDocLine("/**");
        innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");

        StringBuilder sb = new StringBuilder();
        sb.append(" * This class corresponds to the database table ");
        sb.append(introspectedTable.getFullyQualifiedTable());
        innerClass.addJavaDocLine(sb.toString());

        addJavadocTag(innerClass, markAsDoNotDelete);
        innerClass.addJavaDocLine(" */");
    }

    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {
        if (suppressAllComments) {
            return;
        }

        innerEnum.addJavaDocLine("/**");
        innerEnum.addJavaDocLine(" * This enum was generated by MyBatis Generator.");

        StringBuilder sb = new StringBuilder();
        sb.append(" * This enum corresponds to the database table ");
        sb.append(introspectedTable.getFullyQualifiedTable());
        innerEnum.addJavaDocLine(sb.toString());

        addJavadocTag(innerEnum, false);
        innerEnum.addJavaDocLine(" */");
    }

    public void addGetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn
            introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        //        method.addJavaDocLine("/**");
        //        method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
        //
        //        StringBuilder sb = new StringBuilder();
        //        sb.append(" * This method returns the value of the database column ");
        //        sb.append(introspectedTable.getFullyQualifiedTable());
        //        sb.append('.');
        //        sb.append(introspectedColumn.getActualColumnName());
        //        method.addJavaDocLine(sb.toString());
        //        method.addJavaDocLine(" *");
        //
        //        sb.setLength(0);
        //        sb.append(" * @return the value of ");
        //        sb.append(introspectedTable.getFullyQualifiedTable());
        //        sb.append('.');
        //        sb.append(introspectedColumn.getActualColumnName());
        //        method.addJavaDocLine(sb.toString());
        //
        //        addJavadocTag(method, false);
        //        method.addJavaDocLine(" */");
    }

    public void addSetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn
            introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        //        method.addJavaDocLine("/**");
        //        method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
        //
        //        StringBuilder sb = new StringBuilder();
        //        sb.append(" * This method sets the value of the database column ");
        //        sb.append(introspectedTable.getFullyQualifiedTable());
        //        sb.append('.');
        //        sb.append(introspectedColumn.getActualColumnName());
        //        method.addJavaDocLine(sb.toString());
        //
        //        method.addJavaDocLine(" *");
        //
        //        sb.setLength(0);
        //        sb.append(" * @param ");
        //        Parameter param = method.getParameters().get(0);
        //        sb.append(param.getName());
        //        sb.append(" the value for ");
        //        sb.append(introspectedTable.getFullyQualifiedTable());
        //        sb.append('.');
        //        sb.append(introspectedColumn.getActualColumnName());
        //        method.addJavaDocLine(sb.toString());
        //
        //        addJavadocTag(method, false);
        //        method.addJavaDocLine(" */");
    }

    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {
        if (suppressAllComments) {
            return;
        }

        method.addJavaDocLine("/**");
        method.addJavaDocLine(" * This method was generated by MyBatis Generator.");

        StringBuilder sb = new StringBuilder();
        sb.append(" * This method corresponds to the database table ");
        sb.append(introspectedTable.getFullyQualifiedTable());
        method.addJavaDocLine(sb.toString());

        addJavadocTag(method, false);
        method.addJavaDocLine(" */");
    }

    public void addJavaFileComment(CompilationUnit compilationUnit) {
        // add no file level comments by default
        return;
    }

    public void addComment(XmlElement xmlElement) {
        if (suppressAllComments) {
            return;
        }

        xmlElement.addElement(new TextElement("<!--"));

        StringBuilder sb = new StringBuilder();
        sb.append("  WARNING - ");
        sb.append(MergeConstants.NEW_ELEMENT_TAG);
        xmlElement.addElement(new TextElement(sb.toString()));
        xmlElement.addElement(new TextElement("  This element is automatically generated by MyBatis Generator, do not" +
                " modify."));

        String s = getDateString();
        if (s != null) {
            sb.setLength(0);
            sb.append("  This element was generated on ");
            sb.append(s);
            sb.append('.');
            xmlElement.addElement(new TextElement(sb.toString()));
        }

        xmlElement.addElement(new TextElement("-->"));
    }

    public void addRootComment(XmlElement rootElement) {
        // add no document level comments by default
        return;
    }

    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {
        javaElement.addJavaDocLine(" *");

        StringBuilder sb = new StringBuilder();
        sb.append(" * ");
        sb.append(MergeConstants.NEW_ELEMENT_TAG);
        if (markAsDoNotDelete) {
            sb.append(" do_not_delete_during_merge");
        }
        String s = getDateString();
        if (s != null) {
            sb.append(' ');
            sb.append(s);
        }
        javaElement.addJavaDocLine(sb.toString());
    }

    protected String getDateString() {
        if (suppressDate) {
            return null;
        } else if (dateFormat != null) {
            return dateFormat.format(new Date());
        } else {
            return new Date().toString();
        }
    }
}
